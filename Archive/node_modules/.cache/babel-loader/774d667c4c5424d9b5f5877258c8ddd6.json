{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _taggedTemplateLiteral from\"/Users/cheynehayworth/projects/goose-frontend-farms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: flex;\\n  font-size: 14px;\\n  justify-content: space-between;\\n  margin-bottom: 8px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{Card,CardBody,Heading,Text}from'@pancakeswap-libs/uikit';import BigNumber from'bignumber.js/bignumber';import styled from'styled-components';import{getBalanceNumber}from'utils/formatBalance';import{useTotalSupply,useBurnedBalance}from'hooks/useTokenBalance';import useI18n from'hooks/useI18n';import{getCakeAddress}from'utils/addressHelpers';import CardValue from'./CardValue';import{useFarms,usePriceCakeBusd}from'../../../state/hooks';var StyledCakeStats=styled(Card)(_templateObject());var Row=styled.div(_templateObject2());var CakeStats=function CakeStats(){var TranslateString=useI18n();var totalSupply=useTotalSupply();var burnedBalance=useBurnedBalance(getCakeAddress());var farms=useFarms();var eggPrice=usePriceCakeBusd();var circSupply=totalSupply?totalSupply.minus(burnedBalance):new BigNumber(0);var cakeSupply=getBalanceNumber(circSupply);var marketCap=eggPrice.times(circSupply);var eggPerBlock=0;if(farms&&farms[0]&&farms[0].eggPerBlock){eggPerBlock=new BigNumber(farms[0].eggPerBlock).div(new BigNumber(10).pow(18)).toNumber();}return/*#__PURE__*/_jsx(StyledCakeStats,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:TranslateString(534,'PEARL Count')}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(10005,'Market Cap')}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(marketCap),decimals:0,prefix:\"$\"})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(536,'Total Created')}),totalSupply&&/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(totalSupply),decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(538,'Total Given Up')}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(burnedBalance),decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(10004,'Circulating Supply')}),cakeSupply&&/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:cakeSupply,decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(540,'New PEARLS/block')}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"14px\",children:eggPerBlock})]})]})});};export default CakeStats;","map":{"version":3,"sources":["/Users/cheynehayworth/projects/goose-frontend-farms/src/views/Home/components/CakeStats.tsx"],"names":["React","Card","CardBody","Heading","Text","BigNumber","styled","getBalanceNumber","useTotalSupply","useBurnedBalance","useI18n","getCakeAddress","CardValue","useFarms","usePriceCakeBusd","StyledCakeStats","Row","div","CakeStats","TranslateString","totalSupply","burnedBalance","farms","eggPrice","circSupply","minus","cakeSupply","marketCap","times","eggPerBlock","pow","toNumber"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\nimport { useFarms, usePriceCakeBusd } from '../../../state/hooks'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const farms = useFarms()\n  const eggPrice = usePriceCakeBusd()\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0)\n  const cakeSupply = getBalanceNumber(circSupply)\n  const marketCap = eggPrice.times(circSupply)\n\n  let eggPerBlock = 0\n  if (farms && farms[0] && farms[0].eggPerBlock) {\n    eggPerBlock = new BigNumber(farms[0].eggPerBlock).div(new BigNumber(10).pow(18)).toNumber()\n  }\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(534, 'PEARL Count')}\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(10005, 'Market Cap')}</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total Created')}</Text>\n          {totalSupply && <CardValue fontSize=\"14px\" value={getBalanceNumber(totalSupply)} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total Given Up')}</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(10004, 'Circulating Supply')}</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(540, 'New PEARLS/block')}</Text>\n          <Text bold fontSize=\"14px\">\n            {eggPerBlock}\n          </Text>\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n"]},"metadata":{},"sourceType":"module"}